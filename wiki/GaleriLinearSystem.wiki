#summary One-sentence summary of this page.

= Introduction =

Add your content here.


= Details =

Add your content here.  Format your content with:
  * Text in *bold* or _italic_
  * Headings, paragraphs, and lists
  * Automatic links to other wiki pages{{{
#include "Galeri_Maps.h"
#include "Galeri_CrsMatrices.h"
#include "Galeri_Utils.h"
#ifdef HAVE_MPI
#include "Epetra_MpiComm.h"
#include "mpi.h"
#else
#include "Epetra_SerialComm.h"
#endif
#include "Epetra_Map.h"
#include "Epetra_CrsMatrix.h"
#include "Teuchos_ParameterList.hpp"
#include "Teuchos_RCP.hpp"

using namespace Galeri;

// =========== //
// main driver //
// =========== //

int main(int argv, char* argc[])
{
#ifdef HAVE_MPI
  MPI_Init(&argv, &argc);
  Epetra_MpiComm Comm(MPI_COMM_WORLD);
#else
  Epetra_SerialComm Comm;
#endif

  // Create a parameter list
  Teuchos::ParameterList GaleriList;

  // Set the number of discretization points in the x and y direction.
  GaleriList.set("nx", 10 * Comm.NumProc());
  GaleriList.set("ny", 10);

  // Create the map and matrix using the parameter list for a 2D Laplacian.
  Teuchos::RCP<Epetra_Map> Map = Teuchos::rcp( CreateMap("Cartesian2D", Comm, GaleriList) );
  Teuchos::RCP<Epetra_CrsMatrix> Matrix = Teuchos::rcp( CreateCrsMatrix("Laplace2D", &*Map, GaleriList) );

  // Print out the map and matrices  
  Map->Print(std::cout);
  Matrix->Print(std::cout);

#ifdef HAVE_MPI
  MPI_Finalize();
#endif
}

}}}