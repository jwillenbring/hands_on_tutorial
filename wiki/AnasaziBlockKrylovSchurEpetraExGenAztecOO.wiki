#summary Use Anasazi's Block Krylov-Schur to solve a generalized eigenvalue problem, using inverse iteration with Epetra and AztecOO.

This example computes the eigenvalues of smallest magnitude of a
generalized eigenvalue problem K x = λ M x, using Anasazi's
implementation of the block Krylov-Schur method.  It implements
inverse iteration using an AztecOO iterative linear solver with an
Ifpack preconditioner.

Anasazi computes the smallest-magnitude eigenvalues using a
shift-and-invert strategy.  For simplicity, the code below uses a
shift of zero.  It illustrates the general pattern for using Anasazi
for this problem:

  # Construct an "operator" A such that Az = K^{-1} M z.

  # Use Anasazi to solve Az = σ z, which is a spectral
     transformation of the original problem K x = λ M x.

  # The eigenvalues of the original problem are the inverses of the
     eigenvalues of the transformed problem.

The "operator A such that A z = K^{-1} M z" is a subclass of
Epetra_Operator.  The Apply method of that operator takes the vector
b, and computes x = K^{-1} M b.  It does so first by applying the
matrix M, and then by solving the linear system K x = M b for x.
Trilinos implements many different ways to solve linear systems.  The
example below uses an iterative linear solver provided by the AztecOO
package, with an Ifpack preconditioner, to solve linear systems.

= Code example =

To access the code example from Anasazi's documentation, 
[http://trilinos.sandia.gov/packages/docs/dev/packages/anasazi/doc/html/BlockKrylovSchur_2BlockKrylovSchurEpetraExGenAztecOO_8cpp-example.html#_a20 click here.]