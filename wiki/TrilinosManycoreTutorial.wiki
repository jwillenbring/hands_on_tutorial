#summary Trilinos Manycore Tutorial Page
=Trilinos Manycore Tutorial Page=

The Trilinos project is committed to efficient execution on all important computing platforms from laptops to leadership class systems.  Therefore, support for multicore and GPU compute nodes (which we collectively call "manycore" nodes) is essential.  Development of manycore capabilities requires a significant effort over a long span of time, especially since manycore architectures and programming models are still evolving rapidly.

On this page we discuss current capabilities and and future plans, and provide some examples to illustrate how current Trilinos manycore capabilities can be used.

----

== Current Capabilities (Trilinos 11.0, Oct 2012) ==

Trilinos' Tpetra package has supported manycore compute nodes for several years.  Nevertheless, algorithms and software for these nodes are still evolving.  Presently Trilinos provides a core foundation for writing and executing code on manycore-based computers.  Specifically we provide:

  * OpenMP support for Epetra.  Epetra is the original and still dominant collection of data classes for Trilinos.  Epetra can be compiled with OpenMP support enabled.  Turning this option on will enable threaded computation of sparse matrix multiplication, and all vector and multivector computations.  It includes support for NUMA data placement.  Sparse triangular solves are presently NOT threaded.
  * Pthreads, OpenMP, Intel Threading Building Blocks (TBB), and CUDA (via Thrust) support for Tpetra.  Tpetra is the replacement for Epetra that supports an extensible manycore node interface, as well as templated scalar and ordinal types.
  * Manycore-enabled iterative solvers for linear systems and eigenvalue problems.  The Trilinos packages Belos and Anasazi work with both Epetra and Tpetra provided data classes and can therefore exploit intranode parallelism on manycore nodes.  The preconditioner package Ifpack2 and direct sparse solver interface package Amesos2 work with Tpetra objects.  Their sparse factorizations may not necessarily exploit intranode parallelism, but the factors they create are Tpetra sparse matrices.
  * The newly released ShyLU manycore preconditioner package.  ShyLU includes sparse direct and incomplete factorization algorithms for tens to hundreds of cores.

== Near-term future compabilities == 

  * Muelu multilevel preconditioner package. Built on both Epetra and Tpetra, Muelu is the next generation of Trilinos/ML multilevel preconditioner capabilities.
 
== Longer-term future capabilities ==

  * Most of the existing capabilities in Trilinos have a focused research effort on algorithms and software design for manycore nodes.  Over the next five years we expect to complete the transition to a fully manycore enabled software stack.

== Composable with each other and with MPI ==

  * All Trilinos capabilities are composable with each other and with MPI.  For example, it is straightforward to use MPI across nodes of a distributed memory system and use OpenMP, TBB, Pthreads and CUDA on the node.
  * Furthermore, with Tpetra it is possible to create hybrid combinations of nodes.  In particular, we can compose MPI with threading on the node (Pthreads or TBB) and CUDA on the accelerator.  This is currently an advanced use case and we won't show an example in today's tutorial.

----

== !WebTrilinos Portal ==

[http://trilinos.sandia.gov/packages/webtrilinos WebTrilinos] provides a web-based "scientific portal" environment.  It lets you build and run code that uses any of several Trilinos packages.  !WebTrilinos supports most, but not all Trilinos packages.  It is installed at St. John's University in Minnesota.

For today's tutorial and demonstrations, we will use [https://www.users.csbsju.edu/trilinos/WebTrilinosMPI-shared-11.0/c++/index.html this portal].  It includes a version of Trilinos 11 that was built with MPI support, as well as Pthreads (TPI), OpenMP, and "serial" node types. Access to this site is password protected.  Login information will be given during live tutorials as needed.

[https://www.users.csbsju.edu/trilinos/WebTrilinosMPI-shared-11.0/c++/index.html CLICK HERE TO GET TO THE TRILINOS WEB PORTAL.]
 
== Lessons, exercises, and examples ==

=== Tpetra examples ===

Learn how to create and use [http://trilinos.sandia.gov/packages/tpetra Tpetra] dense and sparse linear algebra objects.

  * [Tpetra_Lesson01_HelloWorld Lesson 1]: "Hello world!"  Learn different ways to initialize MPI (or not) and pass an MPI communicator to Tpetra.
  * [Tpetra_Lesson02_Vector Lesson 2]: Learn how to make a Tpetra vector, given a communicator from Lesson 1.
  * [Tpetra_Lesson03_PowerMethod Lesson 3]: Learn how to implement a simple numerical algorithm (the power method) using Tpetra sparse matrices and vectors.
  * [Tpetra_Lesson04_SparseMatrixFill Lesson 4]: Learn different ways to construct a Tpetra sparse matrix.
  * [Tpetra_Lesson05_Redistribution Lesson 5]: Learn how to migrate data in a Tpetra object between two different parallel data distributions.**
  * [Tpetra_Exercises_Advanced_CrsMatrix_ExplicitTranspose Advanced exercise]: Learn how to compute the explicit transpose of a sparse matrix.

=== Solver examples with Tpetra objects ===

  * [Ifpack2CreatePreconditioner Create a preconditioner for a Tpetra sparse matrix using Ifpack2.]
  * [Tpetra_Belos_CreateSolver Create a Belos iterative solver using SolverFactory, and use it to solve a linear system.]

=== Teuchos utilities examples ===

  * [TeuchosPL Build a ParameterList (used to pass parameters to all Trilinos packages).]
  * [TeuchosRCP Use Teuchos' "smart pointer" class to manage memory safely.]
  * [TeuchosCLP Build a command-line parser (tool for changing runtime behavior of program, providing documentation for options).] [TeuchosCLP_unhighlighted [unhighlighted]]
  * [TeuchosTime Create timers and compute statistics]

---- 

== Learning more: ==

  * [http://trilinos.sandia.gov Online reference documentation].
  * [http://trilinos.sandia.gov/events/trilinos_user_group_2011/index.html Trilinos User Group Meeting (2011).]
  * [http://trilinos.sandia.gov/events/trilinos_user_group_2010/index.html Trilinos User Group Meeting (2010).]
  * [http://trilinos.sandia.gov/events/trilinos_user_group_2009/index.html Trilinos User Group Meeting (2009).]
  * [http://trilinos.sandia.gov/events/trilinos_user_group_2008/index.html Trilinos User Group Meeting (2008).]
  * [http://trilinos.sandia.gov/events/trilinos_user_group_2007/index.html Trilinos User Group Meeting (2007).]
  * [http://trilinos.sandia.gov/mail_lists.html Mail lists.]